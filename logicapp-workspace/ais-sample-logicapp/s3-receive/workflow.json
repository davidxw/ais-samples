{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "For_each_attachment": {
                "type": "Foreach",
                "foreach": "@triggerBody()?['attachments']",
                "actions": {
                    "Is_attachment_inline": {
                        "type": "If",
                        "expression": {
                            "and": [
                                {
                                    "equals": [
                                        "@item()?['isInline']",
                                        true
                                    ]
                                }
                            ]
                        },
                        "actions": {},
                        "else": {
                            "actions": {
                                "Decode_base64_content": {
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "attachmentContent",
                                        "value": "@base64ToBinary(item()?['contentBytes'])"
                                    }
                                },
                                "Send_message": {
                                    "type": "ServiceProvider",
                                    "inputs": {
                                        "parameters": {
                                            "entityName": "s3-received",
                                            "message": {
                                                "contentData": "@variables('claimsCheck')",
                                                "contentType": "application/json"
                                            }
                                        },
                                        "serviceProviderConfiguration": {
                                            "connectionName": "serviceBus",
                                            "operationId": "sendMessage",
                                            "serviceProviderId": "/serviceProviders/serviceBus"
                                        }
                                    },
                                    "runAfter": {
                                        "Save_content_to_blob_storage": [
                                            "SUCCEEDED"
                                        ]
                                    }
                                },
                                "Populate_claims_check": {
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "claimsCheck",
                                        "value": {
                                            "id": "@{variables('runId')}",
                                            "containerName": "/s3-received",
                                            "blobName": "@{variables('runId')}-@{item()?['name']}"
                                        }
                                    },
                                    "runAfter": {
                                        "Decode_base64_content": [
                                            "SUCCEEDED"
                                        ]
                                    }
                                },
                                "Save_content_to_blob_storage": {
                                    "type": "ServiceProvider",
                                    "inputs": {
                                        "parameters": {
                                            "containerName": "@body('Parse_JSON')?['containerName']",
                                            "blobName": "@body('Parse_JSON')?['blobName']",
                                            "content": "@variables('attachmentContent')"
                                        },
                                        "serviceProviderConfiguration": {
                                            "connectionName": "AzureBlob",
                                            "operationId": "uploadBlob",
                                            "serviceProviderId": "/serviceProviders/AzureBlob"
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "SUCCEEDED"
                                        ]
                                    }
                                },
                                "Parse_JSON": {
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@variables('claimsCheck')",
                                        "schema": {
                                            "$schema": "http://json-schema.org/draft-04/schema#",
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "containerName": {
                                                    "type": "string"
                                                },
                                                "blobName": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Populate_claims_check": [
                                            "SUCCEEDED"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "runAfter": {
                    "Initialize_claims_check": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Initialize_content_variable": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "attachmentContent",
                            "type": "object"
                        }
                    ]
                },
                "runAfter": {
                    "Create_run_ID": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Initialize_claims_check": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "claimsCheck",
                            "type": "object"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_content_variable": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Create_run_ID": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "runId",
                            "type": "string",
                            "value": "@{guid()}"
                        }
                    ]
                },
                "runAfter": {}
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "When_a_new_email_arrives_(V3)": {
                "type": "ApiConnectionNotification",
                "inputs": {
                    "host": {
                        "connection": {
                            "referenceName": "office365"
                        }
                    },
                    "fetch": {
                        "pathTemplate": {
                            "template": "/v3/Mail/OnNewEmail"
                        },
                        "method": "get",
                        "queries": {
                            "importance": "Any",
                            "fetchOnlyWithAttachment": true,
                            "includeAttachments": true,
                            "subjectFilter": "#toll",
                            "folderPath": "Inbox"
                        }
                    },
                    "subscribe": {
                        "body": {
                            "NotificationUrl": "@{listCallbackUrl()}"
                        },
                        "pathTemplate": {
                            "template": "/GraphMailSubscriptionPoke/$subscriptions"
                        },
                        "method": "post",
                        "queries": {
                            "importance": "Any",
                            "fetchOnlyWithAttachment": true,
                            "folderPath": "Inbox"
                        }
                    }
                },
                "splitOn": "@triggerBody()?['value']"
            }
        }
    },
    "kind": "Stateful"
}